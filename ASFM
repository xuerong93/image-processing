%Using ASFM algorithm to recover 3D structure of the rigid object
close all;clear all;clc;
figure ;imshow('houseimage1.jpg');
figure ;imshow('houseimage2.jpg');
figure ;imshow('houseimage3.jpg');
figure ;imshow('houseimage4.jpg');
% Define number of frames and number of points
sequence_length = 4;
points_number = 12;
ip = cell(1,sequence_length);
% Import your data of image points into cell structure
ip={[179,277;322,325;189,404;327,477;272,254;420,292;268,228;432,267;336,150;600,115;665,190;655,296],%12 points on image1
    [157,269;263,316;164,384;270,460;250,246;370,286;248,224;382,263;302,148;606,116;671,194;661,300],%12 points on image2
    [140,263;214,311;148,376;226,453;236,244;331,286;233,219;341,263;273,147;618,119;683,200;671,311],%12 points on image3
    [129,252;169,300;139,366;182,435;225,238;290,281;224,215;296,260;248,147;633,119;692,207;683,320]};%12 points on image4

ipnorm = cell(1,sequence_length);
af = ones(1,sequence_length);
bf = ones(1,sequence_length);
D = [];

for i = 1 : sequence_length
    af(i) = mean(ip{i}(:,1));%x mean
    bf(i) = mean(ip{i}(:,2));%y mean
    ipnorm{i} = ip{i}(:,:)' - (diag(mean(ip{i}(:,:)',2))*ones(2,points_number));
    D = [D; ipnorm{i}];
end

[U,W,V] = svd(D);

U3 = U(:,1:3);
V3 = V(:,1:3);
W3 = W(1:3,1:3);

D3 = U3*W3*V3';
A0 = U3;
P0 = W3*V3';
dFdD = [];
nondFdD = [];

for k = 1 : sequence_length
    a11 = A0(2*k-1,1);
    a12 = A0(2*k-1,2);
    a13 = A0(2*k-1,3);
    a21 = A0(2*k,1);
    a22 = A0(2*k,2);
    a23 = A0(2*k,3);

    dFdD = [dFdD; a11*a21 a11*a22+a12*a21 a11*a23+a13*a21  a12*a22 a12*a23+a13*a22 a13*a23];
    nondFdD = [nondFdD; a11*a21 a11*a22+a12*a21 a11*a23+a13*a21  a12*a22 a12*a23+a13*a22 a13*a23];
    temp1 = [ a11*a11 a11*a12+a12*a11 a11*a13+a13*a11  a12*a12 a12*a13+a13*a12 a13*a13  ];
    temp2 = [ a21*a21 a21*a22+a22*a21 a21*a23+a23*a21  a22*a22 a22*a23+a23*a22 a23*a23  ];

    a1k(:,k) =  [a11 a12 a13]';
    a2k(:,k) =  [a21 a22 a23]';

    dFdD = [dFdD; temp1-temp2];
    nondFdD = [nondFdD; temp1; temp2];
end

ooi = [0;1;1];
V9 = inv((nondFdD')*nondFdD)*(nondFdD')*(repmat(ooi,sequence_length,1)) ;
CCT = [ V9(1) V9(2) V9(3); V9(2) V9(4) V9(5); V9(3) V9(5) V9(6);]';
[U,S,V] = svd(CCT);
[aa,bb] = eig(CCT);

if(sum(diag(S)<=0)>0||trace(CCT)<0||sum(diag(bb)<=0)>0)
    posi = 0;
    Cli = U*sqrt(S);
else
    posi = 1;
    Cli = chol(CCT);
end
Cli = Cli';

c11 = Cli(1,1);
c12 = Cli(1,2);
c13 = Cli(1,3);
c21 = Cli(2,1);
c22 = Cli(2,2);
c23 = Cli(2,3);
c31 = Cli(3,1);
c32 = Cli(3,2);
c33 = Cli(3,3);

iteration_number = 100;

for nonl_times = 1 : iteration_number 
    dDdC = [];
    dDdC = [dDdC; 2*c11 2*c12  2*c13 0 0 0 0 0 0];    % dD1/dC
    dDdC = [dDdC; c21 c22 c23  c11 c12 c13 0 0 0];    % dD2/dC
    dDdC = [dDdC; c31 c32 c33  0 0 0 c11 c12 c13];    % dD3/dC
    dDdC = [dDdC; 0 0 0 2*c21 2*c22 2*c23 0 0 0];     % dD4/dC
    dDdC = [dDdC; 0 0 0 c31 c32 c33  c21 c22 c23];    % dD5/dC
    dDdC = [dDdC; 0 0 0 0 0 0 2*c31 2*c32  2*c33 ];   % dD6/dC

    df = nondFdD * dDdC;

    fx = [];
    for k = 1 : sequence_length
        %fx = [fx;  a1k(:,k)'*C*C'*a2k(:,k);  (a1k(:,k)'*C*C'*a1k(:,k))-1; (a2k(:,k)'*C*C'*a2k(:,k))-1];
        fx = [fx;  a1k(:,k)'*Cli*Cli'*a2k(:,k);  (a1k(:,k)'*Cli*Cli'*a1k(:,k))-1; (a2k(:,k)'*Cli*Cli'*a2k(:,k))-1];
    end

    norm(fx)
    beta = 10^2;   % step size = 1/beta;    
    delta_k = beta * eye(size(df'*df,1));
    dx = -inv(df'*df + delta_k )*df'*fx/1;

    c11 = c11 + dx(1,1);
    c12 = c12 + dx(2,1);
    c13 = c13 + dx(3,1);
    c21 = c21 + dx(4,1);
    c22 = c22 + dx(5,1);
    c23 = c23 + dx(6,1);
    c31 = c31 + dx(7,1);
    c32 = c32 + dx(8,1);
    c33 = c33 + dx(9,1);
    C = [c11 c12 c13; c21 c22 c23; c31 c32 c33; ];
end

InvCP0 = inv(C)*P0;

Ahat = cell(1,sequence_length);
for i = 1: sequence_length
    a1 = A0(2*i-1,:)*C;
    a2 = A0(2*i,:)*C;
    a1 = a1/norm(a1);
    a2 = a2/norm(a2);
    Ahat{i} = [ a1; a2; cross(a1, a2)];
end
A1c = Ahat{1};
InvCP0 = A1c*InvCP0;
for i = 1: sequence_length
    Ahat{i} = Ahat{i}*inv(A1c);
    a1 = Ahat{i}(1,:)/norm(Ahat{i}(1,:));
    a2 = Ahat{i}(2,:)/norm(Ahat{i}(2,:));
    Ahat{i} = [ a1; a2; cross(a1, a2)];
end


figure;
plot3(InvCP0(1,:),InvCP0(2,:),InvCP0(3,:),'r*');
hold on;
plot3([InvCP0(1,1),InvCP0(1,2)],[InvCP0(2,1),InvCP0(2,2)],[InvCP0(3,1),InvCP0(3,2)],'b-','LineWidth',3);%12
plot3([InvCP0(1,1),InvCP0(1,3)],[InvCP0(2,1),InvCP0(2,3)],[InvCP0(3,1),InvCP0(3,3)],'b-','LineWidth',3);%13
plot3([InvCP0(1,1),InvCP0(1,5)],[InvCP0(2,1),InvCP0(2,5)],[InvCP0(3,1),InvCP0(3,5)],'b-','LineWidth',3);%15
plot3([InvCP0(1,2),InvCP0(1,4)],[InvCP0(2,2),InvCP0(2,4)],[InvCP0(3,2),InvCP0(3,4)],'b-','LineWidth',3);%24
plot3([InvCP0(1,3),InvCP0(1,4)],[InvCP0(2,3),InvCP0(2,4)],[InvCP0(3,3),InvCP0(3,4)],'b-','LineWidth',3);%34
plot3([InvCP0(1,2),InvCP0(1,6)],[InvCP0(2,2),InvCP0(2,6)],[InvCP0(3,2),InvCP0(3,6)],'b-','LineWidth',3);%26
plot3([InvCP0(1,5),InvCP0(1,6)],[InvCP0(2,5),InvCP0(2,6)],[InvCP0(3,5),InvCP0(3,6)],'b-','LineWidth',3);%56
plot3([InvCP0(1,5),InvCP0(1,7)],[InvCP0(2,5),InvCP0(2,7)],[InvCP0(3,5),InvCP0(3,7)],'b-','LineWidth',3);%57
plot3([InvCP0(1,6),InvCP0(1,8)],[InvCP0(2,6),InvCP0(2,8)],[InvCP0(3,6),InvCP0(3,8)],'b-','LineWidth',3);%68
plot3([InvCP0(1,7),InvCP0(1,8)],[InvCP0(2,7),InvCP0(2,8)],[InvCP0(3,7),InvCP0(3,8)],'b-','LineWidth',3);%78
plot3([InvCP0(1,9),InvCP0(1,7)],[InvCP0(2,9),InvCP0(2,7)],[InvCP0(3,9),InvCP0(3,7)],'b-','LineWidth',3);%79
plot3([InvCP0(1,9),InvCP0(1,8)],[InvCP0(2,9),InvCP0(2,8)],[InvCP0(3,9),InvCP0(3,8)],'b-','LineWidth',3);%89
plot3([InvCP0(1,9),InvCP0(1,10)],[InvCP0(2,9),InvCP0(2,10)],[InvCP0(3,9),InvCP0(3,10)],'b-','LineWidth',3);%910
plot3([InvCP0(1,11),InvCP0(1,8)],[InvCP0(2,11),InvCP0(2,8)],[InvCP0(3,11),InvCP0(3,8)],'b-','LineWidth',3);%811
plot3([InvCP0(1,11),InvCP0(1,10)],[InvCP0(2,11),InvCP0(2,10)],[InvCP0(3,11),InvCP0(3,10)],'b-','LineWidth',3);%1011
plot3([InvCP0(1,11),InvCP0(1,12)],[InvCP0(2,11),InvCP0(2,12)],[InvCP0(3,11),InvCP0(3,12)],'b-','LineWidth',3);%1112
plot3([InvCP0(1,4),InvCP0(1,12)],[InvCP0(2,4),InvCP0(2,12)],[InvCP0(3,4),InvCP0(3,12)],'b-','LineWidth',3);%412

M=cell(1,4);
for j=1:1:4
 ip1=ip{j};
for i=1:1:12
P_M(i*2-1:i*2,:)=[[InvCP0(:,i)',1], zeros(1,4), -ip1(i,1)*[InvCP0(:,i)',1];zeros(1,4), [InvCP0(:,i)',1], -ip1(i,2)*[InvCP0(:,i)',1]];
end
[V,D]=eig(P_M'*P_M);
M{j}=[V(1:4,1)';V(5:8,1)';V(9:12,1)'];         %get matrix M
%A=M(:,1:3);b=M(:,4);
end

img = imread('houseimage1.jpg'); 
[nRows,nCols,nPages] = size(img);  %# Image dimensions
outputCorners = [1 nRows;nCols nRows;nCols 1;1 1];

tform = maketform('projective',[ip{1}(3,:);ip{1}(4,:);ip{1}(2,:);ip{1}(1,:)],outputCorners);
triTexture = imtransform(img,tform,'bicubic', 'xdata',[1 nCols], 'ydata',[1 nRows],'size',[nRows nCols]);
pp=[InvCP0(:,3),InvCP0(:,4),InvCP0(:,2)];x=pp(1,:);y=pp(2,:);z=pp(3,:);
%x=[InvCP0(1,3),InvCP0(1,4),InvCP0(1,2)];y=[InvCP0(2,3),InvCP0(2,4),InvCP0(2,2)];z=[InvCP0(3,3),InvCP0(3,4),InvCP0(3,2)];
index = [3 3; 1 2];  %# Index used to create 2-by-2 surface coordinates
X = x(index); Y = y(index); Z = z(index);     
hSurface = surf(X,Y,Z,triTexture,'FaceColor','texturemap','EdgeColor','none');
hold on;

tform = maketform('projective',[ip{1}(2,:);ip{1}(1,:);ip{1}(3,:);ip{1}(4,:)],outputCorners);
triTexture = imtransform(img,tform,'bicubic', 'xdata',[1 nCols], 'ydata',[1 nRows],'size',[nRows nCols]);
pp=[InvCP0(:,2),InvCP0(:,1),InvCP0(:,3)];x=pp(1,:);y=pp(2,:);z=pp(3,:);
index = [3 3; 1 2];  %# Index used to create 2-by-2 surface coordinates
X = x(index); Y = y(index); Z = z(index);     
hSurface = surf(X,Y,Z,triTexture,'FaceColor','texturemap','EdgeColor','none');
hold on;

tform = maketform('projective',[ip{1}(1,:);ip{1}(2,:);ip{1}(6,:);ip{1}(5,:)],outputCorners);
triTexture = imtransform(img,tform,'bicubic', 'xdata',[1 nCols], 'ydata',[1 nRows],'size',[nRows nCols]);
pp=[InvCP0(:,1),InvCP0(:,2),InvCP0(:,6)];x=pp(1,:);y=pp(2,:);z=pp(3,:);
index = [3 3; 1 2];  %# Index used to create 2-by-2 surface coordinates
X = x(index); Y = y(index); Z = z(index);     
hSurface = surf(X,Y,Z,triTexture,'FaceColor','texturemap','EdgeColor','none');
hold on;

tform = maketform('projective',[ip{1}(6,:);ip{1}(5,:);ip{1}(1,:);ip{1}(2,:)],outputCorners);
triTexture = imtransform(img,tform,'bicubic', 'xdata',[1 nCols], 'ydata',[1 nRows],'size',[nRows nCols]);
pp=[InvCP0(:,6),InvCP0(:,5),InvCP0(:,1)];x=pp(1,:);y=pp(2,:);z=pp(3,:);
index = [3 3; 1 2];  %# Index used to create 2-by-2 surface coordinates
X = x(index); Y = y(index); Z = z(index);     
hSurface = surf(X,Y,Z,triTexture,'FaceColor','texturemap','EdgeColor','none');
hold on;

tform = maketform('projective',[ip{1}(5,:);ip{1}(6,:);ip{1}(8,:);ip{1}(7,:)],outputCorners);
triTexture = imtransform(img,tform,'bicubic', 'xdata',[1 nCols], 'ydata',[1 nRows],'size',[nRows nCols]);
pp=[InvCP0(:,5),InvCP0(:,6),InvCP0(:,8)];x=pp(1,:);y=pp(2,:);z=pp(3,:);
index = [3 3; 1 2];  %# Index used to create 2-by-2 surface coordinates
X = x(index); Y = y(index); Z = z(index);     
hSurface = surf(X,Y,Z,triTexture,'FaceColor','texturemap','EdgeColor','none');
hold on;

tform = maketform('projective',[ip{1}(8,:);ip{1}(7,:);ip{1}(5,:);ip{1}(6,:)],outputCorners);
triTexture = imtransform(img,tform,'bicubic', 'xdata',[1 nCols], 'ydata',[1 nRows],'size',[nRows nCols]);
pp=[InvCP0(:,8),InvCP0(:,7),InvCP0(:,5)];x=pp(1,:);y=pp(2,:);z=pp(3,:);
index = [3 3; 1 2];  %# Index used to create 2-by-2 surface coordinates
X = x(index); Y = y(index); Z = z(index);     
hSurface = surf(X,Y,Z,triTexture,'FaceColor','texturemap','EdgeColor','none');
hold on;

tform = maketform('projective',[ip{1}(8,:);ip{1}(11,:);ip{1}(10,:);ip{1}(9,:)],outputCorners);
triTexture = imtransform(img,tform,'bicubic', 'xdata',[1 nCols], 'ydata',[1 nRows],'size',[nRows nCols]);
pp=[InvCP0(:,8),InvCP0(:,11),InvCP0(:,10)];x=pp(1,:);y=pp(2,:);z=pp(3,:);
index = [3 3; 1 2];  %# Index used to create 2-by-2 surface coordinates
X = x(index); Y = y(index); Z = z(index);     
hSurface = surf(X,Y,Z,triTexture,'FaceColor','texturemap','EdgeColor','none');
hold on;

tform = maketform('projective',[ip{1}(10,:);ip{1}(9,:);ip{1}(8,:);ip{1}(11,:)],outputCorners);
triTexture = imtransform(img,tform,'bicubic', 'xdata',[1 nCols], 'ydata',[1 nRows],'size',[nRows nCols]);
pp=[InvCP0(:,10),InvCP0(:,9),InvCP0(:,8)];x=pp(1,:);y=pp(2,:);z=pp(3,:);
index = [3 3; 1 2];  %# Index used to create 2-by-2 surface coordinates
X = x(index); Y = y(index); Z = z(index);     
hSurface = surf(X,Y,Z,triTexture,'FaceColor','texturemap','EdgeColor','none');
hold on;

tform = maketform('projective',[ip{1}(6,:);ip{1}(2,:);ip{1}(4,:);ip{1}(6,:)-ip{1}(2,:)+ip{1}(4,:)],outputCorners);
triTexture = imtransform(img,tform,'bicubic', 'xdata',[1 nCols], 'ydata',[1 nRows],'size',[nRows nCols]);
pp=[InvCP0(:,6),InvCP0(:,2),InvCP0(:,4)];x=pp(1,:);y=pp(2,:);z=pp(3,:);
index = [3 3; 1 2];  %# Index used to create 2-by-2 surface coordinates
X = x(index); Y = y(index); Z = z(index);     
hSurface = surf(X,Y,Z,triTexture,'FaceColor','texturemap','EdgeColor','none');
hold on;

tform = maketform('projective',[ip{1}(4,:);ip{1}(12,:);ip{1}(6,:);ip{1}(4,:)-ip{1}(12,:)+ip{1}(6,:)],outputCorners);
triTexture = imtransform(img,tform,'bicubic', 'xdata',[1 nCols], 'ydata',[1 nRows],'size',[nRows nCols]);
pp=[InvCP0(:,4),InvCP0(:,12),InvCP0(:,6)];x=pp(1,:);y=pp(2,:);z=pp(3,:);
index = [3 3; 1 2]; X = x(index); Y = y(index); Z = z(index);     
hSurface = surf(X,Y,Z,triTexture,'FaceColor','texturemap','EdgeColor','none');
hold on;

tform = maketform('projective',[ip{1}(12,:);ip{1}(11,:);ip{1}(6,:);ip{1}(12,:)-ip{1}(11,:)+ip{1}(6,:)],outputCorners);
triTexture = imtransform(img,tform,'bicubic', 'xdata',[1 nCols], 'ydata',[1 nRows],'size',[nRows nCols]);
pp=[InvCP0(:,12),InvCP0(:,11),InvCP0(:,6)];x=pp(1,:);y=pp(2,:);z=pp(3,:);
index = [3 3; 1 2]; X = x(index); Y = y(index); Z = z(index);     
hSurface = surf(X,Y,Z,triTexture,'FaceColor','texturemap','EdgeColor','none');
hold on;

tform = maketform('projective',[ip{1}(11,:);ip{1}(8,:);ip{1}(6,:);ip{1}(11,:)-ip{1}(8,:)+ip{1}(6,:)],outputCorners);
triTexture = imtransform(img,tform,'bicubic', 'xdata',[1 nCols], 'ydata',[1 nRows],'size',[nRows nCols]);
pp=[InvCP0(:,11),InvCP0(:,8),InvCP0(:,6)];x=pp(1,:);y=pp(2,:);z=pp(3,:);
index = [3 3; 1 2]; X = x(index); Y = y(index); Z = z(index);     
hSurface = surf(X,Y,Z,triTexture,'FaceColor','texturemap','EdgeColor','none');
hold on;

tform = maketform('projective',[ip{1}(7,:);ip{1}(8,:);ip{1}(9,:);ip{1}(7,:)-ip{1}(8,:)+ip{1}(9,:)],outputCorners);
triTexture = imtransform(img,tform,'bicubic', 'xdata',[1 nCols], 'ydata',[1 nRows],'size',[nRows nCols]);
pp=[InvCP0(:,7),InvCP0(:,8),InvCP0(:,9)];x=pp(1,:);y=pp(2,:);z=pp(3,:);
index = [3 3; 1 2]; X = x(index); Y = y(index); Z = z(index);     
hSurface = surf(X,Y,Z,triTexture,'FaceColor','texturemap','EdgeColor','none');
hold on;

colormap gray;
xlabel('x-axis');ylabel('y-axis');zlabel('z-axis');
